spring.main.allow-bean-definition-overriding: true
spring.data.mongodb.uri=mongodb://localhost:27017/test

#https://www.tutorialspoint.com/spring_boot/spring_boot_enabling_https.htm
# https://stackoverflow.com/questions/17695297/importing-the-private-key-public-certificate-pair-in-the-java-keystore

# Define a custom port instead of the default 8080
server.port=8080

# Tell Spring Security (if used) to require requests over HTTPS
security.require-ssl=true

# The format used for the keystore 
server.ssl.key-store-type=JKS
# The path to the keystore containing the certificate
server.ssl.key-store=mykeystore.jks
# The password used to generate the certificate
server.ssl.key-store-password=password
# The alias mapped to the certificate
server.ssl.key-alias=tomcat



#image upload size limit
spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=2MB



#oauth2 config for mapmyindia
security.oauth2.client.clientId= 4i2v8_ss3s_XRGl9aMwWWm54Q6NfV8hNerKgfhr8e9GKTe8sxle58v2-EZKdEo9el8f4U3vgS55tybCETRzLwg==
security.oauth2.client.clientSecret= kCZgyC2hGNJTeHsx4RbtdQNJIPEovU9vNi0WwuZ0yO-A3bpHCDaowWjNAiIbZ1E3gnnW8jxO8HPNSSr-cJihgzyiofe0MMSv
#security.oauth2.client.access-token-uri= https://outpost.mapmyindia.com/api/security/oauth/token
security.oauth2.client.grant-type= client_credentials
security.oauth2.resource.token-info-uri=https://outpost.mapmyindia.com/api/security/oauth/token
#security.oauth2.resource.token-type= bearer
#security.oauth2.client.token-name= access_token
#security.oauth2.resource.token-type= access_token










